/*
* Configuration of module: OsekOs (cfgobj.h)
*
* Created by:              
* Copyright:               
*
* Configured for (MCU):    HCS12_XE
*
* Module vendor:           iSoft
* Generator version:       2.0.11
*
* Generated by iSoft Shanghai Software Lab 
*           on Mon May 13 17:21:55 CST 2013
*/

#ifndef _CFGOBJ_H
#define _CFGOBJ_H

#include "config.h"
#include "structs.h"
#include "Os.h"

#if ((CFG_CC == BCC1)||(CFG_CC == ECC1))
extern TaskType osReadyTable[CFG_PRIORITY_MAX];
#else
extern TaskType* const osReadyQueue[CFG_PRIORITY_MAX]; 
extern SizeType const osActivateQueueSize[CFG_PRIORITY_MAX];
extern Queue osReadyQueueMark[CFG_PRIORITY_MAX];            
#endif

extern StackType const osSystemStack;
#if (CFG_TASK_STACK_MAX>0)
extern StackType const osTaskStack[CFG_TASK_STACK_MAX];
#endif

#if (CFG_TASK_MAX > 0)
extern TaskInfo const osTask[CFG_TASK_MAX];
#if (CFG_SCHEDULE == PREEMPTIVE_MIXED)
extern ScheduleType const osTaskSchedule[CFG_TASK_MAX]; 
#endif
#if (CFG_INTERNAL_RESOURCE_MAX>0)
extern PriorityType const osTaskCeiling[CFG_TASK_MAX];
#endif
extern AppModeType const osTaskAutoStartMask[CFG_TASK_MAX];
#endif

#if (CFG_STD_RESOURCE_MAX>0) 
extern ResourceInfo const osResource[CFG_STD_RESOURCE_MAX];
#endif

#if (CFG_COUNTER_MAX>0)
extern CounterInfo const osCounter[CFG_COUNTER_MAX];
#endif

#if (CFG_ALARM_MAX>0)
extern AlarmInfo const osAlarm[CFG_ALARM_MAX];
#endif

#if (CFG_AUTO_ALARM_MAX>0)
extern AlarmAutostartType const osAlarmAutoStart[CFG_AUTO_ALARM_MAX];
#endif

#if (CFG_TASK_MAX > 0)
extern TCB osTcb[CFG_TASK_MAX];
#endif
#if (CFG_EXTENDED_TASK_MAX > 0)
extern EventMaskType osTaskEvent[CFG_EXTENDED_TASK_MAX];
extern EventMaskType osTaskWaitEvent[CFG_EXTENDED_TASK_MAX];
#endif
#if (CFG_STD_RESOURCE_MAX>0) 
extern ResourceCB osResourceCB[CFG_STD_RESOURCE_MAX];
#endif
#if (CFG_COUNTER_MAX>0)
extern CounterCB osCounterCB[CFG_COUNTER_MAX];
#endif

#if (CFG_ALARM_MAX>0)
extern AlarmCB osAlarmCB[CFG_ALARM_MAX];
#endif

DeclareTask(Task3);
DeclareTask(Task1);
DeclareTask(Task2);


#endif